# Web-appendix-TMLE-causal-inference-survival-analysis
* Web appendix 

This is the web-appendix to our manuscript entitled /On targeted/
/maximum likelihood estimation for causal inference in survival and
competing risks analysis/. \\

We provide =R= code to apply our current implementations of TMLE for
estimation of causal parameters in survival and competing risks
settings; this includes the iterative and the one-step targeting
procedures as well as super learning to combine different Cox
regression models or variations over the Poisson-based highly adaptive
lasso (HAL) estimator. \\

Although the current implementations can be applied to new data
setting, we emphasize that our implementations remain to be made into
a more user-friendly software package. Current and future work is
involved with this.

** Overview

- [[https://github.com/helenecharlotte/Web-appendix-TMLE-causal-inference-survival-analysis#data-example][Presentation of the data example]]

- [[https://github.com/helenecharlotte/Web-appendix-TMLE-causal-inference-survival-analysis#simulated-version-of-the-colon-data][Simulated version of the data example]]

 + [[https://github.com/helenecharlotte/Web-appendix-TMLE-causal-inference-survival-analysis#true-values-of-target-parameters-box-1][Computing true values of target parameters]]
 + [[https://github.com/helenecharlotte/Web-appendix-TMLE-causal-inference-survival-analysis#targeting-hazard-estimators-for-real-valued-parameter][Targeting hazard estimators for real-valued parameter]]
 + [[https://github.com/helenecharlotte/Web-appendix-TMLE-causal-inference-survival-analysis#targeting-hazard-estimators-for-multivariate-parameter][Targeting hazard estimators for multivariate parameter]]

- [[https://github.com/helenecharlotte/Web-appendix-TMLE-causal-inference-survival-analysis#analysis-of-the-colon-survival-data][Analysis of the colon survival data]]

 + [[https://github.com/helenecharlotte/Web-appendix-TMLE-causal-inference-survival-analysis#target-parameters-evaluated-at-fixed-time-point][Fixed time-point]]
 + [[https://github.com/helenecharlotte/Web-appendix-TMLE-causal-inference-survival-analysis#target-parameters-evaluated-at-multiple-time-points][Multiple time-points]]

- [[https://github.com/helenecharlotte/Web-appendix-TMLE-causal-inference-survival-analysis#analysis-of-the-colon-competing-risks-data][Analysis of the colon competing risks data]]

 + [[https://github.com/helenecharlotte/Web-appendix-TMLE-causal-inference-survival-analysis#target-parameters-evaluated-at-fixed-time-point-1][Fixed time-point]]
 + [[https://github.com/helenecharlotte/Web-appendix-TMLE-causal-inference-survival-analysis#target-parameters-evaluated-at-multiple-time-points-1][Multiple time-points]]

*Note:* To run any of the code below you need to load the following
=R= script:

#+ATTR_LATEX: :options otherkeywords={}, deletekeywords={}
#+BEGIN_SRC R  :results none :exports code  :session *R* :cache yes  
source("./usage/load.R") 
#+END_SRC


** Data example 

In our manuscript we use the publicly available dataset =colon= from
the =survival= package in =R= as a running example. These are data
from a trial on adjuvant chemotherapy for colon cancer, comparing
levamisole treatment against levamisole treatment combined with
fluorouracil (a chemotherapy agent) against no treatment. 

The raw data available in R consist of two rows per subject:
one for cancer recurrence and one for death. This allows us to work
with the data in two different forms, for two different purposes, as
follows:

- Survival outcome data: :: We consider treatment effect estimation in
     the setting where the event of interest is all-cause mortality
     and there are no competing causes.
- Competing risks data: :: We consider treatment effect estimation in
     the setting with two competing causes being cancer recurrence and
     death.

Here we load the =colon= data and create the two datasets above:

#+ATTR_LATEX: :options otherkeywords={}, deletekeywords={}
#+BEGIN_SRC R  :results none :exports code  :session *R* :cache yes  
source("./usage/preprocess.colon.data.R")  
#+END_SRC    

Number of events in the survival data (=colon.surv=): 

#+ATTR_LATEX: :options otherkeywords={}, deletekeywords={}
#+BEGIN_SRC R  :results output :exports results  :session *R* :cache yes  
out <- cbind(colon.surv[, .N, by="event"],   
             colon.surv[, max(time), by="event"][, max.follow.up:=V1][, -c("event", "V1"), with=FALSE])
colnames(out) <- c("event", "N", "max follow-up")
out   
#+END_SRC    

#+RESULTS[<2021-10-26 10:53:24> 7eee5ed3cf7a7dcfa9165d99be6d9864b908f1d8]:
:    event   N max follow-up
: 1:     1 430          2910
: 2:     0 458          3329

Number of events in the competing risks data (=colon.cr=):

#+ATTR_LATEX: :options otherkeywords={}, deletekeywords={}
#+BEGIN_SRC R  :results output :exports results  :session *R* :cache yes  
out <- cbind(colon.cr[order(event)][, .N, by="event"],   
             colon.cr[order(event)][, max(time), by="event"][, max.follow.up:=V1][, -c("event", "V1"), with=FALSE]) 
colnames(out) <- c("event", "N", "max follow-up")
out
#+END_SRC    

#+RESULTS[<2021-10-26 10:59:58> 69107f9b4d0c1b098d8836cf6b851c33986fe64d]:
:   event   N max follow-up
: 1:     0 405          3329
: 2:     1 446          2695
: 3:     2  37          2789

Note that for both datasets we simply removed observations with
missing covariates.


** Simulated version of the =colon= data

The following script sets up functionality to create simulated
versions of the =colon= data:

#+ATTR_LATEX: :options otherkeywords={}, deletekeywords={}
#+BEGIN_SRC R  :results none :exports code  :session *R* :cache yes  
source("./usage/synthesize.colon.data.R")     
#+END_SRC    

To create a simulated version of the survival data, we run code as
follows:

#+ATTR_LATEX: :options otherkeywords={}, deletekeywords={}
#+BEGIN_SRC R :exports both :results output  :session *R* :cache yes 
#-- fit models to data;   
fit.colon <- fit.colon.fun(
    formula.1=Surv(time, event==1)~rx+sex+nodes+differ+age+obstruct+perfor+adhere+extent+surg,
    formula.0=Surv(time, event==0)~rx+sex+nodes+differ+age+obstruct+perfor+adhere+extent+surg,
    formula.treat=rx~sex+age+nodes+differ+obstruct+perfor+adhere+extent+surg,
    d=copy(colon.surv))  
#-- here we simulate data (fixed seed);  
set.seed(15)   
(sim.colon.surv <- synthesize.colon.fun(fit.colon=fit.colon, d=copy(colon.surv), name.treat="rx", event.name="event")) 
#+END_SRC   

#+RESULTS[<2021-10-26 10:48:28> a2e7a0e328f378c138b26ac6c4b3dc5603e36653]:
#+begin_example
     sex age obstruct perfor adhere nodes differ extent surg rx.num      rx      time event
  1:   0  69        0      0      0    12      2      3    0      3 Lev+5FU  634.0321     1
  2:   0  48        0      0      0     1      2      3    0      2     Lev  889.8198     1
  3:   0  42        0      0      0     6      1      3    0      2     Lev  670.7178     1
  4:   0  78        0      0      0     3      2      3    0      3 Lev+5FU 1922.5082     1
  5:   1  49        0      0      0    10      2      3    0      1     Obs 1830.0520     1
 ---                                                                                       
884:   0  75        0      0      0     2      3      3    0      2     Lev  860.8502     1
885:   0  76        0      0      0     1      2      3    0      1     Obs 1527.2115     1
886:   0  51        0      0      0     4      2      3    1      3 Lev+5FU 2665.0731     0
887:   0  63        0      0      0     5      2      3    1      3 Lev+5FU 2577.7704     0
888:   1  51        1      0      0     4      2      3    1      2     Lev 2932.9771     1
#+end_example

To create a simulated version of the competing risks data, we run code
as follows:

#+ATTR_LATEX: :options otherkeywords={}, deletekeywords={}
#+BEGIN_SRC R :exports both :results output  :session *R* :cache yes 
#-- fit models to data; 
fit.colon.cr <- fit.colon.fun(     
    formula.1=Surv(time, event==1)~rx+sex+differ+age+nodes.squared+obstruct+perfor+adhere+extent+surg+rx*sex+rx*perfor+rx*age,
    formula.2=Surv(time, event==2)~rx+sex+nodes+differ+age+obstruct+adhere+extent+surg,
    formula.0=Surv(time, event==0)~rx+sex+nodes+differ+age+obstruct+perfor+adhere+extent+surg,
    formula.treat=rx~sex+age+nodes+differ+obstruct+perfor+adhere+extent+surg,
    d=copy(colon.cr))  
#-- here we simulate data (fixed seed); 
set.seed(31)      
(sim.colon.cr <- synthesize.colon.fun(fit.colon=fit.colon.cr, d=copy(colon.cr), name.treat="rx", event.name="event"))
#+END_SRC   

#+RESULTS[<2021-10-26 10:48:41> da9e677c1c87f49568e8fd420adc172d9d7f5707]:
#+begin_example
     sex age obstruct perfor adhere nodes differ extent surg nodes.squared rx.num      rx      time event
  1:   0  55        1      0      0     4      1      3    0            16      2     Lev 2590.1288     0
  2:   0  64        0      0      0     1      2      3    0             1      2     Lev  862.2267     1
  3:   1  63        0      0      0     2      3      3    0             4      1     Obs  244.6612     1
  4:   1  67        1      0      0     1      2      3    1             1      3 Lev+5FU 1446.1525     1
  5:   0  45        0      0      0     3      2      3    0             9      3 Lev+5FU 3224.6467     0
 ---                                                                                                     
884:   0  71        0      0      0    20      2      3    0           400      3 Lev+5FU 2117.5456     0
885:   0  34        1      0      0     3      1      3    0             9      1     Obs 2314.8256     0
886:   1  66        0      0      0     2      2      4    0             4      1     Obs  488.2843     0
887:   1  50        1      0      1     1      2      3    0             1      2     Lev  127.1821     1
888:   1  42        1      0      0     5      2      3    0            25      1     Obs  525.6158     1
#+end_example

*** True values of target parameters (Box 1)

To compute the approximations to the true values of the target
parameters for the simulated competing risks data, we run the
following code:

#+ATTR_LATEX: :options otherkeywords={}, deletekeywords={}
#+BEGIN_SRC R :exports results :results output  :session *R* :cache yes 
true.a0 <- lapply((1:10)/2, function(tt) synthesize.colon.fun(fit.colon=fit.colon.cr, d=copy(colon.cr), name.treat="rx", event.name="event", 
                                                              n=1e6, get.true.value=0, tau=tt*365.25)) 
true.a1 <- lapply((1:10)/2, function(tt) synthesize.colon.fun(fit.colon=fit.colon.cr, d=copy(colon.cr), name.treat="rx", event.name="event", 
                                                              n=1e6, get.true.value=1, tau=tt*365.25))   
true.a2 <- lapply((1:10)/2, function(tt) synthesize.colon.fun(fit.colon=fit.colon.cr, d=copy(colon.cr), name.treat="rx", event.name="event", 
                                                              n=1e6, get.true.value=2, tau=tt*365.25))
#+END_SRC   


#+ATTR_LATEX: :options otherkeywords={}, deletekeywords={}
#+BEGIN_SRC R :exports results :results output  :session *R* :cache yes 
message("Absolute risks under treatment=Obs:")  
tab0 <- rbind(sapply(true.a0, function(x) x["F1"]), 
              sapply(true.a0, function(x) x["F2"])) 
rownames(tab0) <- c("F1", "F2") 
colnames(tab0) <- paste0((1:10)/2)
print(tab0)
message("")
message("Absolute risks under treatment=Lev:") 
tab1 <- rbind(sapply(true.a1, function(x) x["F1"]), 
              sapply(true.a1, function(x) x["F2"]))
rownames(tab1) <- c("F1", "F2") 
colnames(tab1) <- paste0((1:10)/2) 
print(tab1)
message("")
message("Absolute risks under treatment=Lev+5FU:") 
tab2 <- rbind(sapply(true.a2, function(x) x["F1"]), 
              sapply(true.a2, function(x) x["F2"]))
rownames(tab2) <- c("F1", "F2") 
colnames(tab2) <- paste0((1:10)/2)
print(tab2)
#+END_SRC    

#+RESULTS[<2021-10-26 11:03:24> c713c541118ae841f940cfe9779e4624741a75be]:
#+begin_example
Absolute risks under treatment=Obs:
 
       0.5        1      1.5        2      2.5        3      3.5       4      4.5        5
F1 0.146465 0.227907 0.288342 0.339962 0.382316 0.419372 0.452278 0.48266 0.508024 0.532319
F2 0.000400 0.001145 0.002186 0.003464 0.004639 0.005960 0.007595 0.00901 0.010475 0.011990

Absolute risks under treatment=Lev:
 
       0.5        1      1.5        2      2.5        3      3.5        4      4.5        5
F1 0.137236 0.212368 0.271814 0.320762 0.361983 0.397857 0.430558 0.459212 0.486208 0.509233
F2 0.000235 0.000755 0.001475 0.002178 0.003173 0.004224 0.005209 0.006190 0.007314 0.008595

Absolute risks under treatment=Lev+5FU:
 
       0.5        1      1.5        2      2.5        3      3.5        4      4.5        5
F1 0.088497 0.139775 0.179475 0.214357 0.244999 0.272068 0.296521 0.318285 0.339306 0.357575
F2 0.000180 0.000538 0.001043 0.001834 0.002531 0.003325 0.004253 0.005287 0.006230 0.007313
#+end_example


We see for example that the average treatment effect of levamisole
    treatment compared to no treatment on the cause-one specific
    absolute risk beyond three years is:

#+ATTR_LATEX: :options otherkeywords={}, deletekeywords={}
#+BEGIN_SRC R :exports results :results output  :session *R* :cache yes 
message("Average treatment effect of levamisole compared to no treatment:") 
round(as.numeric(true.a1[(1:10)/2==3][[1]]["F1"] - true.a0[(1:10)/2==3][[1]]["F1"]),4) 
message("")
message("Average treatment effect of levamisole plus fluorouracil compared to no treatment:")  
round(as.numeric(true.a2[(1:10)/2==3][[1]]["F1"] - true.a0[(1:10)/2==3][[1]]["F1"]),4)
#+END_SRC   

#+RESULTS[<2021-10-26 11:07:24> 315f367c8c44acc8387e5babd2376acfe8d2f4ad]:
: Average treatment effect of levamisole compared to no treatment:
: [1] -0.0215
: 
: Average treatment effect of levamisole plus fluorouracil compared to no treatment:
: [1] -0.1473


#+ATTR_LATEX: :options otherkeywords={}, deletekeywords={}
#+BEGIN_SRC R :exports none :results none  :session *R* :cache yes 
library(xtable)
tab0 <- rbind(sapply(true.a0, function(x) x["F1"]), 
              sapply(true.a0, function(x) x["F2"])) 
rownames(tab0) <- c("F1", "F2") 
colnames(tab0) <- paste0((1:10)/2)
print(xtable(tab0, align=rep("c", length(true.a0)+1), digits=3)) 

tab1 <- rbind(sapply(true.a1, function(x) x["F1"]), 
              sapply(true.a1, function(x) x["F2"]))
rownames(tab1) <- c("F1", "F2")  
colnames(tab1) <- paste0((1:10)/2) 
print(xtable(tab1, align=rep("c", length(true.a1)+1), digits=3)) 

tab2 <- rbind(sapply(true.a2, function(x) x["F1"]), 
              sapply(true.a2, function(x) x["F2"]))
rownames(tab2) <- c("F1", "F2") 
colnames(tab2) <- paste0((1:10)/2)
print(xtable(tab2, align=rep("c", length(true.a2)+1), digits=3)) 
#+END_SRC    


*** Targeting hazard estimators for real-valued parameter

We here show the code to apply our TMLE function to target the
real-valued parameter being the absolute risk of cancer relapse after
3 years of follow-up under treatment with levamisole plus
fluorouracil. \\

Note that we simply use a Cox regression including main effects of all
covariates for initial estimation of each cause-specific hazards and
also for the hazard of censoring (specified in the =estimation=
argument, with list elements for each hazard). To estimate the
probability distribution of treatment (specified in the argument
=treat.model=), we similarly include main effects of all
covariates. To get the treatment-specific absolute risk of cancer
relapse under levamisole plus fluorouracil treatment we set the
argument =treat.effect= to ="Lev+5FU"= and the argument =target= to
=1=. We specify the time-horizon by =tau= and note that the time
variable of the data is measured in days. \\

The function returns the initial (untargeted) estimate for the target
parameter, the Kaplan-Meier estimate and the targeted estimate along
with its standard error computed based on the efficient influence
function.


#+ATTR_LATEX: :options otherkeywords={}, deletekeywords={}
#+BEGIN_SRC R :exports code :results none  :session *R* :cache yes 
fit.tmle.F1.Lev5FU.3yrs <- 
     contmle(sim.colon.cr,  
             estimation=list("relapse"=list(fit="cox",
                                            model=Surv(time, event==1)~rx+sex+nodes+age+obstruct+perfor+differ+adhere+extent+surg),
                             "death"=list(fit="cox",
                                          model=Surv(time, event==2)~rx+sex+nodes+age+obstruct+perfor+differ+adhere+extent+surg),
                             "cens"=list(fit="cox",
                                         model=Surv(time, event==0)~rx+sex+nodes+age+obstruct+perfor+differ+adhere+extent+surg)
                             ),
             treat.model=rx~sex+age+nodes+obstruct+perfor+differ+adhere+extent+surg,
             treat.effect="Lev+5FU",   
             output.km=TRUE, 
             target=1,
             tau=3*365.25) 
#+END_SRC   

#+ATTR_LATEX: :options otherkeywords={}, deletekeywords={}
#+BEGIN_SRC R :exports both :results output  :session *R* :cache yes 
fit.tmle.F1.Lev5FU.3yrs
#+END_SRC   

#+RESULTS[<2021-10-26 11:16:28> 4fde8ef84e687d2368b16f764a018467840814f9]:
#+begin_example
$init
$init$F1
         tau=1095.75
init.est  0.30605538
init.se   0.02594074


$km
$km$F1
       tau=1095.75
km.est  0.29184130
km.se   0.02732888


$tmle
$tmle$F1
         tau=1095.75
tmle.est 0.2778811  
tmle.se  0.02584953 
#+end_example


*** Targeting hazard estimators for multivariate parameter

We here show the code to apply our TMLE function to target the
multivariate parameter being the absolute risk of cancer relapse /and/
the absolute risk of relapse-free death after 3 years of follow-up
under treatment with levamisole plus fluorouracil. \\

The only change to the function call above is setting the argument
=target= to =1:2=. (When the argument =target= is multivariate, like
here, the one-step TMLE is applied per default; one could also specify
the argument =iterative= as =TRUE= to apply the iterative TMLE to
target the two absolute risk probabilities separately).

#+ATTR_LATEX: :options otherkeywords={}, deletekeywords={}
#+BEGIN_SRC R :exports code :results none  :session *R* :cache yes 
fit.tmle.F1.F2.Lev5FU.3yrs <- 
     contmle(sim.colon.cr,  
             estimation=list("relapse"=list(fit="cox",
                                            model=Surv(time, event==1)~rx+sex+nodes+age+obstruct+perfor+differ+adhere+extent+surg),
                             "death"=list(fit="cox",
                                          model=Surv(time, event==2)~rx+sex+nodes+age+obstruct+perfor+differ+adhere+extent+surg),
                             "cens"=list(fit="cox",
                                         model=Surv(time, event==0)~rx+sex+nodes+age+obstruct+perfor+differ+adhere+extent+surg)
                             ),
             treat.model=rx~sex+age+nodes+obstruct+perfor+differ+adhere+extent+surg,
             treat.effect="Lev+5FU",   
             output.km=TRUE, 
             target=1:2, 
             tau=3*365.25) 
#+END_SRC   

#+ATTR_LATEX: :options otherkeywords={}, deletekeywords={}
#+BEGIN_SRC R :exports both :results output  :session *R* :cache yes 
fit.tmle.F1.F2.Lev5FU.3yrs
#+END_SRC   

#+RESULTS[<2021-10-26 11:30:48> e6eaf6c7c7fc1bd03323dbac1b68040f140b9467]:
#+begin_example
$init
$init$F1
         tau=1095.75
init.est  0.30605538
init.se   0.02594074

$init$F2
         tau=1095.75
init.est 0.012503259
init.se  0.007945622

$init$S
         tau=1095.75
init.est  0.68144137
init.se   0.02669174


$km
$km$F1
       tau=1095.75
km.est  0.29184130
km.se   0.02732888

$km$F2
       tau=1095.75
km.est 0.014511430
km.se  0.007204259


$tmle
$tmle$F1
         tau=1095.75
tmle.est  0.27774955
tmle.se   0.02584448

$tmle$F2
         tau=1095.75
tmle.est 0.014375801
tmle.se  0.007923176

$tmle$S
         tau=1095.75
tmle.est  0.70787465
tmle.se   0.02660447


$convergenced.at.step
[1] 10
#+end_example



** Analysis of the =colon= survival data

*** Target parameters evaluated at fixed time-point 

#+ATTR_LATEX: :options otherkeywords={}, deletekeywords={}
#+BEGIN_SRC R :exports code :results none  :session *R* :cache yes 
fit.colon.surv.3yrs <- lapply(list("Lev", "Lev+5FU", "Obs"), function(treat) {
    contmle(colon.surv, 
            estimation=list("outcome"=list(fit="cox",
                                           model=Surv(time, event==1)~rx+sex+nodes+age+obstruct+perfor+differ+adhere+extent+surg),
                            "cens"=list(fit="cox",
                                        model=Surv(time, event==0)~rx+sex+nodes+age+obstruct+perfor+differ+adhere+extent+surg)
                            ),
            treat.model=rx~sex+age+nodes+obstruct+perfor+differ+adhere+extent+surg,
            treat.effect=treat,   
            output.km=TRUE, 
            tau=3*365.25)}) 
names(fit.colon.surv.3yrs) <- c("Lev", "Lev+5FU", "Obs")
#+END_SRC    

Treatment-specific survival probabilities: 

#+ATTR_LATEX: :options otherkeywords={}, deletekeywords={}
#+BEGIN_SRC R :exports results :results output  :session *R* :cache yes 
(fit.tmle <- do.call("cbind", lapply(1:length(fit.colon.surv.3yrs), function(jj) {
    fit.jj <- fit.colon.surv.3yrs[[jj]]
    out.jj <- fit.jj$tmle
    colnames(out.jj) <- names(fit.colon.surv.3yrs)[jj] 
    return(out.jj) 
})))
#+END_SRC    

#+RESULTS[<2021-10-26 11:47:14> fc3fa6aa9def1543ddfd1ccfb3a69260a960f9ae]:
:                 Lev   Lev+5FU       Obs
: tmle.est 0.36215867 0.2521322 0.3363260
: tmle.se  0.02708732 0.0252459 0.0258185

Average treatment effects: 

#+ATTR_LATEX: :options otherkeywords={}, deletekeywords={}
#+BEGIN_SRC R :exports results :results output  :session *R* :cache yes 
message("Lev versus Obs:")
rbind(est=fit.tmle["tmle.est", "Lev"]-fit.tmle["tmle.est", "Obs"], 
      se=sqrt(fit.tmle["tmle.se", "Lev"]^2+fit.tmle["tmle.se", "Obs"]^2), 
      ci.lwr=fit.tmle["tmle.est", "Lev"]-fit.tmle["tmle.est", "Obs"]-1.96*sqrt(fit.tmle["tmle.se", "Lev"]^2+fit.tmle["tmle.se", "Obs"]^2), 
      ci.upr=fit.tmle["tmle.est", "Lev"]-fit.tmle["tmle.est", "Obs"]+1.96*sqrt(fit.tmle["tmle.se", "Lev"]^2+fit.tmle["tmle.se", "Obs"]^2))
message("")
message("")
message("Lev+5FU versus Obs:")
rbind(est=fit.tmle["tmle.est", "Lev+5FU"]-fit.tmle["tmle.est", "Obs"], 
      se=sqrt(fit.tmle["tmle.se", "Lev+5FU"]^2+fit.tmle["tmle.se", "Obs"]^2), 
      ci.lwr=fit.tmle["tmle.est", "Lev+5FU"]-fit.tmle["tmle.est", "Obs"]-1.96*sqrt(fit.tmle["tmle.se", "Lev+5FU"]^2+fit.tmle["tmle.se", "Obs"]^2), 
      ci.upr=fit.tmle["tmle.est", "Lev+5FU"]-fit.tmle["tmle.est", "Obs"]+1.96*sqrt(fit.tmle["tmle.se", "Lev+5FU"]^2+fit.tmle["tmle.se", "Obs"]^2)) 
#+END_SRC    

#+RESULTS[<2021-10-26 11:48:09> c7ef265ecb9aa82efec861e2dad9cf6fd50bb6dd]:
#+begin_example
Lev versus Obs:
 
             [,1]
est     0.02583270
se      0.03742082
ci.lwr -0.04751211
ci.upr  0.09917751


Lev+5FU versus Obs:
 
             [,1]
est    -0.08419382
se      0.03611026
ci.lwr -0.15496992
ci.upr -0.01341771
#+end_example



*** Target parameters evaluated at multiple time-points 


#+ATTR_LATEX: :options otherkeywords={}, deletekeywords={}
#+BEGIN_SRC R :exports code :results none  :session *R* :cache yes 
fit.colon.surv.10 <- lapply(list("Lev", "Lev+5FU", "Obs"), function(treat) {
    contmle(colon.surv, 
            estimation=list("outcome"=list(fit="cox",
                                           model=Surv(time, event==1)~rx+sex+nodes+age+obstruct+perfor+differ+adhere+extent+surg),
                            "cens"=list(fit="cox",
                                        model=Surv(time, event==0)~rx+sex+nodes+age+obstruct+perfor+differ+adhere+extent+surg)
                            ),
            treat.model=rx~sex+age+nodes+obstruct+perfor+differ+adhere+extent+surg,
            treat.effect=treat,   
            output.km=TRUE, 
            tau=(1:10)/2*365.25)}) 
names(fit.colon.surv.10) <- c("Lev", "Lev+5FU", "Obs")
#+END_SRC    

Look at the output from the function call: 

#+ATTR_LATEX: :options otherkeywords={}, deletekeywords={}
#+BEGIN_SRC R :exports results :results output  :session *R* :cache yes 
fit.colon.surv.10  
#+END_SRC    

#+RESULTS[<2021-10-26 11:57:14> 6675324e9e6ef96cbc36177557ef5a54bdf8e649]:
#+begin_example
$Lev
$Lev$init
         tau=182.625 tau=365.25 tau=547.875  tau=730.5 tau=913.125 tau=1095.75 tau=1278.375   tau=1461 tau=1643.625
init.est  0.02835222 0.08945904  0.15406173 0.23472927  0.29148191  0.33874400   0.38782289 0.41753055   0.43171327
init.se   0.01077263 0.01750937  0.02101924 0.02455774  0.02594145  0.02710851   0.02751253 0.02784702   0.02790259
         tau=1826.25
init.est  0.45422687
init.se   0.02818284

$Lev$km
       tau=182.625 tau=365.25 tau=547.875  tau=730.5 tau=913.125 tau=1095.75 tau=1278.375   tau=1461 tau=1643.625
km.est  0.03401361 0.09863946  0.15986395 0.24489796  0.30272109   0.3673469   0.41836735 0.43537415    0.4421976
km.se   0.01057154 0.01739005  0.02137354 0.02507967  0.02679483   0.0281156   0.02876932 0.02891599    0.0289663
       tau=1826.25
km.est  0.45246391
km.se   0.02903328

$Lev$tmle
         tau=182.625 tau=365.25 tau=547.875  tau=730.5 tau=913.125 tau=1095.75 tau=1278.375   tau=1461 tau=1643.625
tmle.est  0.03307466 0.09805916  0.16124264 0.24559780  0.30402459   0.3594241   0.40453069 0.42612078   0.43580600
tmle.se   0.01076537 0.01748946  0.02099921 0.02452176  0.02592174   0.0270674   0.02750496 0.02784501   0.02790233
         tau=1826.25
tmle.est  0.45270915
tmle.se   0.02817468

$Lev$convergenced.at.step
[1] 22


$`Lev+5FU`
$`Lev+5FU`$init
         tau=182.625 tau=365.25 tau=547.875  tau=730.5 tau=913.125 tau=1095.75 tau=1278.375   tau=1461 tau=1643.625
init.est  0.02124002 0.06775297  0.11801353 0.18240125  0.22886176  0.26834598   0.31017192 0.33592663   0.34834504
init.se   0.01084225 0.01669286  0.01940754 0.02277205  0.02454795  0.02529375   0.02660409 0.02752964   0.02796546
         tau=1826.25
init.est   0.3682281
init.se    0.0281170

$`Lev+5FU`$km
       tau=182.625 tau=365.25 tau=547.875  tau=730.5 tau=913.125 tau=1095.75 tau=1278.375   tau=1461 tau=1643.625
km.est  0.03114187 0.08304498  0.12456747 0.19031142  0.23529412  0.25259516   0.28373702 0.31506634    0.3396537
km.se   0.01021771 0.01623236  0.01942517 0.02309099  0.02495191  0.02555886   0.02651828 0.02733759    0.0278911
       tau=1826.25
km.est  0.36426047
km.se   0.02836012

$`Lev+5FU`$tmle
         tau=182.625 tau=365.25 tau=547.875  tau=730.5 tau=913.125 tau=1095.75 tau=1278.375   tau=1461 tau=1643.625
tmle.est  0.03090673 0.08322442  0.12726155 0.19061829  0.23063810  0.25433631   0.28874694 0.32014815   0.34008081
tmle.se   0.01080327 0.01666590  0.01939296 0.02276702  0.02455554  0.02525886   0.02654892 0.02749183   0.02796285
         tau=1826.25
tmle.est   0.3667224
tmle.se    0.0281270

$`Lev+5FU`$convergenced.at.step
[1] 37


$Obs
$Obs$init
         tau=182.625 tau=365.25 tau=547.875  tau=730.5 tau=913.125 tau=1095.75 tau=1278.375   tau=1461 tau=1643.625
init.est 0.030735875 0.09663097  0.16579619 0.25143732  0.31119010  0.36062085   0.41161910 0.44231641   0.45692413
init.se  0.007170564 0.01499860  0.02002748 0.02297368  0.02470325  0.02586371   0.02680666 0.02727022   0.02735704
         tau=1826.25
init.est  0.48004763
init.se   0.02756949

$Obs$km
       tau=182.625 tau=365.25 tau=547.875  tau=730.5 tau=913.125 tau=1095.75 tau=1278.375   tau=1461 tau=1643.625
km.est 0.016393443 0.07540984  0.15751213 0.23649536  0.29573279  0.34838829   0.40433475 0.44053540   0.45040830
km.se  0.007271029 0.01511954  0.02086899 0.02435665  0.02616458  0.02731988   0.02814289 0.02847059   0.02853308
       tau=1826.25
km.est  0.48006894
km.se   0.02865511

$Obs$tmle
         tau=182.625 tau=365.25 tau=547.875 tau=730.5 tau=913.125 tau=1095.75 tau=1278.375   tau=1461 tau=1643.625
tmle.est 0.016878445 0.07388697  0.15237946 0.2254381  0.28409610  0.33628076   0.39451403 0.43021249   0.44365133
tmle.se  0.007142577 0.01497606  0.02003331 0.0229260  0.02466255  0.02582577   0.02679395 0.02726544   0.02734601
         tau=1826.25
tmle.est  0.47194228
tmle.se   0.02756736

$Obs$convergenced.at.step
[1] 69
#+end_example

** Analysis of the =colon= competing risks data

*** Target parameters evaluated at fixed time-point

#+ATTR_LATEX: :options otherkeywords={}, deletekeywords={}
#+BEGIN_SRC R :exports code :results none  :session *R* :cache yes 
fit.contmle.F1.F2.3yrs <- lapply(list("Lev", "Lev+5FU", "Obs"), function(treat) {
    contmle(colon.cr, 
            estimation=list("relapse"=list(fit="cox",
                                           model=Surv(time, event==1)~rx+sex+nodes+age+obstruct+perfor+differ+adhere+extent+surg),
                            "death"=list(fit="cox",
                                         model=Surv(time, event==2)~rx+sex+nodes+age+obstruct+perfor+differ+adhere+extent+surg),
                            "cens"=list(fit="cox",
                                        model=Surv(time, event==0)~rx+sex+nodes+age+obstruct+perfor+differ+adhere+extent+surg)
                            ),
            treat.model=rx~sex+age+nodes+obstruct+perfor+differ+adhere+extent+surg,
            treat.effect=treat,  
            sl.models=NULL, 
            output.km=TRUE, 
            target=1:2, 
            tau=3*365.25)}) 
names(fit.contmle.F1.F2.3yrs) <- c("Lev", "Lev+5FU", "Obs")
#+END_SRC    

Look at the output from the function call: 

#+ATTR_LATEX: :options otherkeywords={}, deletekeywords={}
#+BEGIN_SRC R :exports results :results output  :session *R* :cache yes 
fit.contmle.F1.F2.3yrs
#+END_SRC    

#+RESULTS[<2021-10-26 12:35:08> 21558932507c4cfd5f4acc5ca83906bb9e8d82e7]:
#+begin_example
$Lev
$Lev$init
$Lev$init$F1
         tau=1095.75
init.est  0.47162155
init.se   0.02953647

$Lev$init$F2
         tau=1095.75
init.est 0.016863909
init.se  0.007633557

$Lev$init$S
         tau=1095.75
init.est   0.5115145
init.se    0.0295077


$Lev$km
$Lev$km$F1
       tau=1095.75
km.est  0.47619048
km.se   0.02912751

$Lev$km$F2
       tau=1095.75
km.est 0.020408163
km.se  0.008246143


$Lev$tmle
$Lev$tmle$F1
         tau=1095.75
tmle.est   0.4811181
tmle.se    0.0294812

$Lev$tmle$F2
         tau=1095.75
tmle.est 0.017050344
tmle.se  0.007632803

$Lev$tmle$S
         tau=1095.75
tmle.est  0.50183159
tmle.se   0.02945199


$Lev$convergenced.at.step
[1] 9


$`Lev+5FU`
$`Lev+5FU`$init
$`Lev+5FU`$init$F1
         tau=1095.75
init.est  0.34077206
init.se   0.02741342

$`Lev+5FU`$init$F2
         tau=1095.75
init.est 0.025918531
init.se  0.008911165

$`Lev+5FU`$init$S
         tau=1095.75
init.est  0.63330941
init.se   0.02797136


$`Lev+5FU`$km
$`Lev+5FU`$km$F1
       tau=1095.75
km.est  0.33564014
km.se   0.02777728

$`Lev+5FU`$km$F2
       tau=1095.75
km.est 0.024221453
km.se  0.009043297


$`Lev+5FU`$tmle
$`Lev+5FU`$tmle$F1
         tau=1095.75
tmle.est  0.33303482
tmle.se   0.02740082

$`Lev+5FU`$tmle$F2
         tau=1095.75
tmle.est 0.026138385
tmle.se  0.008912386

$`Lev+5FU`$tmle$S
         tau=1095.75
tmle.est  0.64082680
tmle.se   0.02795636


$`Lev+5FU`$convergenced.at.step
[1] 4


$Obs
$Obs$init
$Obs$init$F1
         tau=1095.75
init.est  0.49148573
init.se   0.02778776

$Obs$init$F2
         tau=1095.75
init.est 0.022792274
init.se  0.006850221

$Obs$init$S
         tau=1095.75
init.est  0.48572199
init.se   0.02772329


$Obs$km
$Obs$km$F1
       tau=1095.75
km.est  0.48932819
km.se   0.02865829

$Obs$km$F2
       tau=1095.75
km.est 0.019752491
km.se  0.007983817


$Obs$tmle
$Obs$tmle$F1
         tau=1095.75
tmle.est  0.48233846
tmle.se   0.02778264

$Obs$tmle$F2
         tau=1095.75
tmle.est 0.018102716
tmle.se  0.006833954

$Obs$tmle$S
         tau=1095.75
tmle.est  0.49955882
tmle.se   0.02770872


$Obs$convergenced.at.step
[1] 17
#+end_example


*** Target parameters evaluated at multiple time-points 

#+ATTR_LATEX: :options otherkeywords={}, deletekeywords={}
#+BEGIN_SRC R :exports code :results none  :session *R* :cache yes 
fit.contmle.F1.10 <- lapply(list("Lev", "Lev+5FU", "Obs"), function(treat) {
    contmle(colon.cr, 
            estimation=list("relapse"=list(fit="cox",
                                           model=Surv(time, event==1)~rx+sex+nodes+age+obstruct+perfor+differ+adhere+extent+surg),
                            "death"=list(fit="cox",
                                         model=Surv(time, event==2)~rx+sex+nodes+age+obstruct+perfor+differ+adhere+extent+surg),
                            "cens"=list(fit="cox",
                                        model=Surv(time, event==0)~rx+sex+nodes+age+obstruct+perfor+differ+adhere+extent+surg)
                            ),
            treat.model=rx~sex+age+nodes+obstruct+perfor+differ+adhere+extent+surg,
            treat.effect=treat,  
            sl.models=NULL, 
            simultaneous.ci=TRUE,
            output.km=TRUE, 
            target=1, 
            tau=(1:10)/2*365.25)}) 
names(fit.contmle.F1.10) <- c("Lev", "Lev+5FU", "Obs")
#+END_SRC    

Look at the output from the function call: 

#+ATTR_LATEX: :options otherkeywords={}, deletekeywords={}
#+BEGIN_SRC R :exports results :results output  :session *R* :cache yes 
fit.contmle.F1.10
#+END_SRC    


* Dependencies :noexport:

** R-version

The code has been tested with the following R version

#+BEGIN_SRC R  :results output :exports results  :session *R* :cache yes  
version 
#+END_SRC

#+RESULTS[<2021-10-26 09:13:15> 1df30d9c818626e8157399cee494b2b432f3eaf5]:
#+begin_example
               _                           
platform       x86_64-pc-linux-gnu         
arch           x86_64                      
os             linux-gnu                   
system         x86_64, linux-gnu           
status                                     
major          4                           
minor          0.3                         
year           2020                        
month          10                          
day            10                          
svn rev        79318                       
language       R                           
version.string R version 4.0.3 (2020-10-10)
nickname       Bunny-Wunnies Freak Out
#+end_example

and the following package versions:

#+BEGIN_SRC R  :results output raw drawer  :exports results  :session *R* :cache yes  
pp <- c("data.table", "zoo", "glmnet", "stringr", "nleqslv", "prodlim", "ggplot2", "gridExtra", "survival", "riskRegression")
Publish::org(data.table(Package=pp,Version=sapply(pp,function(x) as.character(packageVersion(x)))))
#+END_SRC

#+RESULTS[<2021-10-26 09:16:52> d8d1bcae67f94c7406bb1a22603134875ff22f9c]:
:results:
| Package    | Version |
|------------+---------|
| data.table |  1.13.0 |
| zoo        |   1.8.8 |
| stringr    |   1.4.0 |
| ltmle      |   1.2.0 |
| parallel   |   4.0.2 |
| foreach    |   1.5.0 |
| doParallel |  1.0.15 |
:end:
